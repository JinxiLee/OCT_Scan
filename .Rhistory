rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
}
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
getwd()
dev.off()
dev.off()
temp_df
colnames(temp_df)
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
cairo_pdf(filename = 'pairs_panel_simplified.pdf', width = 16, height = 12)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
cairo_pdf(filename = 'fig_oct_pairs_panel.pdf', width = 10, height = 10)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
cairo_pdf(filename = 'fig_oct_pairs_panel.pdf', width = 12, height = 10)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
nlevels(temp_seq)
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
my_cols <- RColorBrewer::brewer.pal(n = nlevels(temp_seq), name = 'Dark2')
# my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
cairo_pdf(filename = 'fig_oct_pairs_panel.pdf', width = 12, height = 10)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
my_cols <- RColorBrewer::brewer.pal(n = nlevels(temp_seq), name = 'Set1')
# my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
cairo_pdf(filename = 'fig_oct_pairs_panel.pdf', width = 12, height = 10)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
PerformanceAnalytics::rich6equal
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
my_cols <- PerformanceAnalytics::rich6equal
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(temp_seq), name = 'Set1')
# my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
cairo_pdf(filename = 'fig_oct_pairs_panel.pdf', width = 12, height = 10)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
PerformanceAnalytics::rich12equal
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
my_cols <- PerformanceAnalytics::rich12equal[seq(from = 1, to = 12, by = 2)]
my_cols <- RColorBrewer::brewer.pal(n = nlevels(temp_seq), name = 'Set1')
# my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
cairo_pdf(filename = 'fig_oct_pairs_panel.pdf', width = 12, height = 10)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
my_cols <- PerformanceAnalytics::rich12equal[seq(from = 1, to = 12, by = 2)]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(temp_seq), name = 'Set1')
# my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
cairo_pdf(filename = 'fig_oct_pairs_panel.pdf', width = 12, height = 10)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
if(1){
# Pairs Panel --------------------------------------------------------------
source('~/Documents/R/Numerical_Ecology/Yasmeen/panelutils.R')
# Steady State Only, w/ wo condition 6
temp_df <- df_result_roughness %>%
select(Date, psill, range, kappa,
roughness_absolute, roughness_relative, mean, sd) %>%
filter(!str_detect(rownames(.), 'Autopsy'))
colnames(temp_df) <- c('Date', 'c1', 'range', 'nu',
'R_absolute', 'R_relative', 'mean', 'sd')
temp_seq <- factor(
c(rep('Stable_Flux', 5),
rep('Relaxation_1', 9),
rep('Relaxation_2', 4),
rep('Air_Scouring', 3),
rep('Relaxation_Air_Scouring', 3)),
levels = c('Stable_Flux', 'Relaxation_1', 'Relaxation_2',
'Air_Scouring', 'Relaxation_Air_Scouring'), ordered = T)
# my_cols <- PerformanceAnalytics::rich12equal[seq(from = 1, to = 12, by = 2)]
my_cols <- RColorBrewer::brewer.pal(n = nlevels(temp_seq), name = 'Set1')
# my_cols <- seq_along(unique(temp_seq))
my_cols <- my_cols[temp_seq]
# Sort Columns
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
cairo_pdf(filename = 'fig_oct_pairs_panel.pdf', width = 12, height = 10)
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
pairs(x = temp_df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
cite('doparallel')
cite('doParallel')
citation('doParallel')
citation('plyr')
citation('tidyverse')
citation('mgcv')
citation('EBImage')
citation('ggplot2')
citation('colorRamps')
citation('stringr')
citation('readr')
citation('sp')
citation('gstat')
cite('R')
cite()
citation()
citation(kernlab)
citation('kernlab')
citation('cluster')
citation('factoextra')
citation('gplots')
install.packages(c("car", "coda", "cpp11", "GetoptLong", "h2o", "quantreg", "rmarkdown", "systemfonts", "xfun"))
